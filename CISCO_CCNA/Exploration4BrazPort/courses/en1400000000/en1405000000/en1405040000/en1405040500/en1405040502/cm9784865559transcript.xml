<transcript lastedited="12.03.08 08:12:32">
<title><content-text><![CDATA[5.4.5 - Troubleshooting Command ACL Errors]]></content-text></title>
<brief><content-text><![CDATA[The diagram depicts multiple activities.<br><br>Activity 1: <br><br>In this activity, you arrange the steps in the correct sequence for a dynamic ACL. A dynamic ACL is a Cisco I O S feature that allows users to open up a temporary hole in any existing ACL.<br><br>Network Topology:<br>The user at the PC with IP address 192.168.10.10/24 is connected to router R1. The R1 interface S0/0/0 (IP address 10.1.1.1/30) is connected to the R2 firewall interface S0/0/0 via a WAN link. R2 FA0/0 (IP address 192.168.20.20/24) is connected to a server at IP address 192.168.20.254/24.<br><br>- The user first telnets to the router and authenticates.<br>- If successful, the Telnet session ends, and the hole is created.<br>- When the hole is open, the user has access to services that are otherwise denied.<br>- An idle timeout or absolute timeout can be configured on the router.<br>- In this example, user Hannah opens a hole in the firewall on router R2. Arrange the following steps in the correct sequence.<br><br>Open Telnet session from 192.168.10.10<br>Username, Password please<br>User is Hannah, pass is it's a secret<br>Hannah is a valid user<br>Close Telnet session<br>Firewall Hole is Now Open!!<br>Permit 192.168.10.10 to any IP until timeout exceeded<br><br>Activity 2: <br>In this activity, you complete the following steps to allow Hannah access to the TFTP server through a dynamic ACL.<br><br>Note: You may wish to contact your instructor for assistance with this activity<br><br>Step 1: Configure a password for Hannah to use when telnetting to R2.<br><br>Step 2: Configure a dynamic ACL named LET ME IN to permit access for Hannah's IP address.<br><br>Step 3: Apply LET ME IN to interface S0/0/0.<br><br>Step 4: Configure the Telnet lines for login and auto-command timeout.<br><br>Arrange these command parts to fill in the blanks and complete the dynamic ACL configuration above.<br><br>R2(config)#BLANK BLANK<br>R2(config)#BLANK BLANK BLANK<br>R2(config)#BLANK BLANK BLANK<br>R2(config)#BLANK<br>R2(config-i f)#BLANK<br>R2(config-i f)#BLANK<br>R2(config-line)#BLANK<br>R2(config-line)#BLANK<br><br>Command Part Answers:<br>timeout 90<br>e q telnet<br>Permit i p<br>login local<br>access-list 101 dynamic LET ME IN<br>autocommand access-enable host timeout 2<br>host 192.168.10.10<br>host 192.168.20.254<br>Username Hannah password its a secret<br>i p access-group 101 in<br>interface s0/0/0<br>access-list 101 permit tcp<br>host 192.168.10.10<br>host 10.1.1.2<br>line v t y 0 5<br><br><br>Activity 3: <br>In this activity, you complete the commands necessary to configure a reflexive ACL. Reflexive ACL's generate a new, temporary entry that permit traffic to enter your network if the traffic is part of a session initiated by an internal source.<br><br>The reflexive ACL method is much harder to spook because more filter criteria must be matched before a packet is permitted through.<br><br>Reflexive ACL's can filter IP traffic regardless of whether that traffic uses TCP, UDP, or any other Internet protocol. Source addresses, destination addresses, and port numbers are checked.<br><br>Use the extended named ACL options reflect and evaluate to configure a reflexive ACL.<br><br>Use the following command parts to fill in the blanks and complete the reflexive ACL configuration above.<br><br>R2(config)#i p access-list extended FILTER_OUT<br>R2(config-e x t-n a c l)#BLANK<br>R2(config-e x t-n a c l)#exit<br>R2(config)#i p access-list extended FILTER_IN<br>R2(config-e x t-n a c l)#BLANK BLANK<br>R2(config-e x t-n a c l)#exit<br>R2(config)#interface s0/1/0<br>R2(config-i f)#BLANK out<br>R2(config-i f)#BLANK in<br><br>Command Part Answers:<br>i p access-group FILTER_IN<br>permit i p any any<br>Evaluate<br>ip access-group FILTER_OUT<br>Reflect GOOD GUYS<br>GOOD GUYS<br><br><br>Activity 4: <br>In this activity, you complete the commands necessary to configure a time-based ACL. Time-based ACL's are similar to extended ACL's in function, but they allow for access control based on time.<br><br>To implement time-based ACL's, you create a time range that defines specific times of the day and week.<br><br>You identify the time range with a name and then refer to it in a named ACL.<br><br>Configure R2 to block Web traffic out to the Internet during business hours from 7:00 AM to 6:00 PM (18:00) on weekdays.<br><br>Use the following command parts to fill in the blanks and complete the time-based ACL configuration above.<br><br>R2(config)#BLANK<br>R2(config-time-range)#BLANK<br>R2(config-e x t-n a c l)#BLANK<br>R2(config)#BLANK<br>R2(config-e x t-n a c l)#BLANK BLANK<br>R2(config-e x t-n a c l)#BLANK<br>R2(config-e x t-n a c l)#exit<br>R2(config)#interface s0/1/0<br>R2(config-i f)#BLANK<br><br>Command Part Answers:<br>time-range NO_WEB<br>permit i p any any<br>Time-range NO_WEB<br>i p access-list extended WEB_ACCESS<br>Periodic weekdays 7:00 to 18:00<br>i p access-group WEB_ACCESS out<br>deny tcp any any e q 80]]></content-text></brief>
<full><content-text><![CDATA[FULL - NOT FOR PRODUCTION]]></content-text></full>
</transcript>
